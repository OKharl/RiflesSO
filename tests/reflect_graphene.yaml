# Find reflectance of graphene bands
riflesso:                      
    lattice:                    # Crystal lattice parameters
        lattice-vectors-units:  Angstrom       # The units in which a, b, c are measured [default to Angstrom]
        a.Cartesian:            [4.651, 0, 0]  
        b.Cartesian:            [-2.3255, 4.02788, 0]
        c.Cartesian:            [0, 0, 15]             # Just a dummy vector that's large enough
    electronic-structure:       # Electronic structure to be imported
        type:                   Wannierized
        format:                 jdftx
        filename.dft-output:    "../jdftx_calculations/graphene/scf_fine.out"
        filename.wannier-stem:  "../jdftx_calculations/graphene/wannier"
    solver:                     # Reflectance solver parameters
        method:                 adiabatic
        E-tolerance:            5e-4 eV
    boundary-potential:         # The confining potential shape
        shape:                  kink.tanh        # Another option is kink.piecewise_linear
        height:                 10.0 eV          # V(+inf) - V(-inf); should be large enough for reflection
        width:                  5.0 Angstrom     # A characteristic _spatial_ scale of V(z)
    projector:                  # Projection of the result onto the finite k-grid
        type:                   default
        k-grid:                 input
    task:                       # Parameters of the batch caclulation
        type:                   reflection-coeffs
        bands:                  all
        k-point-grid:           8 8 1
        boundary-normals:       # Define a set of boundary normal vectors
            type:               in-plane
            plane-normal:       [0, 0, 1]        # The axis around which to rotate \vec{n}
            degrees-range:      [0, 360, 10]     # Azimuthal angle: from 0 to 360 degrees in 10deg steps
        output-filename:        "reflection_coeffs_graphene.dat"   # The file to write reflection coeffs to
        output-format:          table                              # Format: text
    output:
        logfile:                "output.log"     # Main RiflesSO log file 
